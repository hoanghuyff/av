task.wait(20)
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer

-- 📂 Cấu hình file lưu dữ liệu
local folderPath = "faker/"
local filePath = folderPath .. LocalPlayer.Name .. ".json"

-- 🌟 Danh sách game
local bloxFruitsUniverseID = 2753915549
local bloxFruitsPlaceIDs = {2753915549, 4442272183, 7449423635} -- Sea 1, 2, 3

local popularGameIDs = {
    6516141723, 286090429, 155615604, 2788229376, 3260590327,
    142823291, 13772394663, 6284583030, 9498006165
}

-- 🔄 Biến trạng thái
local step = 0
local lastAFKTime = 0
local totalJumps = 0

-- ⏳ **Thời gian chờ**
local minBloxTime, maxBloxTime = 7200, 18000  -- 2-5 giờ trong Blox Fruits
local minGameTime, maxGameTime = 300, 600     -- 5-10 phút trong game khác

-- 📌 Kiểm tra xem có ở Blox Fruits không
local function isInBloxFruits()
    return game.GameId == bloxFruitsUniverseID
end

-- 🎯 Lấy game hot ngẫu nhiên
local function getHotGame()
    return popularGameIDs[math.random(1, #popularGameIDs)]
end

-- 🔁 Lấy Sea 1 của Blox Fruits để quay về
local function getBloxFruitsSea1()
    return 2753915549
end

-- 📂 Tạo thư mục nếu chưa có
if not isfolder(folderPath) then makefolder(folderPath) end

-- 📂 Đọc dữ liệu từ file nếu đã tồn tại
if pcall(function() return readfile(filePath) end) then
    local content = readfile(filePath)
    local success, data = pcall(function() return HttpService:JSONDecode(content) end)
    if success and type(data) == "table" then
        step = data.step or 0
        lastAFKTime = data.lastAFKTime or 0
        totalJumps = data.totalJumps or 0
    else
        lastAFKTime = os.time()
    end
else
    lastAFKTime = os.time()
end

-- 📂 Hàm lưu dữ liệu vào file mỗi 5 giây
local function saveData()
    local timeNow = os.time()
    local data = {
        lastAFKTime = lastAFKTime,
        totalTimeAFK = timeNow - lastAFKTime, -- Tính thời gian đã trôi qua
        totalJumps = totalJumps,
        step = step
    }
    writefile(filePath, HttpService:JSONEncode(data))
end

-- 🚀 Hàm teleport (CẬP NHẬT `lastAFKTime` trước khi teleport)
local function safeTeleport(targetGameID)
    if not targetGameID then return end
    lastAFKTime = os.time() -- ✅ Cập nhật ngay khi teleport
    totalJumps = totalJumps + 1 -- Tăng số lần nhảy game
    saveData()

    local success, errorMessage = pcall(function()
        TeleportService:Teleport(targetGameID, LocalPlayer)
    end)

    if not success then
        print("⚠ [ERROR] Teleport lỗi: " .. errorMessage)
        if string.find(errorMessage, "restricted") then
            game:Shutdown()
        else
            task.wait(10)
            safeTeleport(getHotGame())
        end
    end
end

-- ⏳ Kiểm tra AFK và nhảy game
local function checkAFK()
    while true do
        task.wait(1)  -- 🔄 Cập nhật mỗi giây
        local totalAFKTime = os.time() - lastAFKTime

        if step == 0 and isInBloxFruits() then
            if totalAFKTime >= math.random(minBloxTime, maxBloxTime) then
                lastAFKTime = os.time()
                step = 1
                saveData()
                safeTeleport(getHotGame())
            end
        elseif step == 1 then
            if totalAFKTime >= math.random(minGameTime, maxGameTime) then
                lastAFKTime = os.time()
                step = 2
                saveData()
                safeTeleport(getHotGame())
            end
        elseif step == 2 then
            if totalAFKTime >= math.random(minGameTime, maxGameTime) then
                lastAFKTime = os.time()
                step = 0
                saveData()
                safeTeleport(getBloxFruitsSea1())
            end
        end
    end
end

-- 🔁 Auto lưu file mỗi 5 giây
local function autoSaveLoop()
    while true do
        task.wait(5)
        saveData()
    end
end

-- 🔁 Theo dõi teleport thành công/thất bại
LocalPlayer.OnTeleport:Connect(function(state)
    if state == Enum.TeleportState.Started then
        lastAFKTime = os.time()
        saveData()
    elseif state == Enum.TeleportState.Failed then
        safeTeleport(getHotGame()) 
    end
end)

-- 🚀 Chạy kiểm tra AFK
task.spawn(checkAFK)

-- 🚀 Chạy auto save file mỗi 5 giây
task.spawn(autoSaveLoop)

-- 📂 **Ghi file ngay khi execute**
saveData()
